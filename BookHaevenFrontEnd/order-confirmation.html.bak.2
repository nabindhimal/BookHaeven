<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Order Confirmation</title>
    <script src="js/nav.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-50">
    <div class="container mx-auto px-4 py-8 max-w-3xl">
        <div class="bg-white rounded-lg shadow-md p-6 text-center">
            <h1 class="text-2xl font-bold mb-4">Order Confirmed!</h1>
            <p class="mb-6">Please bring this claim code to the store:</p>
            
            <div class="bg-yellow-50 border border-yellow-200 p-4 rounded-lg mb-6">
                <p class="text-sm text-gray-600 mb-1">Your Claim Code</p>
                <p id="claim-code" class="text-2xl font-mono font-bold text-blue-600">Loading...</p>
            </div>
            
            <p class="text-gray-600 mb-2">Order Date: <span id="order-date">Loading...</span></p>
            <p class="text-gray-600 mb-6">Total: <span id="order-total">Loading...</span></p>
            
            <div id="error-message" class="text-red-500 mb-4 hidden"></div>
            
            <a href="/index.html" class="bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600 transition">
                Back to Home
            </a>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", async () => {
            // Check if user is logged in
            const token = localStorage.getItem("token");
            if (!token) {
                window.location.href = "/login.html";
                return;
            }

            const urlParams = new URLSearchParams(window.location.search);
            const orderId = urlParams.get('id');
            
            if (orderId) {
                try {
                    console.log("Loading order details for order ID:", orderId);
                    await loadOrderDetails(orderId, token);
                } catch (error) {
                    console.error("Error loading order:", error);
                    showError("Failed to load order details. Please try again later.");
                }
            } else {
                showError("No order ID provided in URL");
            }
        });

        async function loadOrderDetails(orderId, token) {
            try {
                // Update to use your specific API endpoint
                const response = await fetch(`http://localhost:5036/api/orders/${orderId}`, {
                    headers: {
                        "Authorization": `Bearer ${token}`
                    }
                });
                
                console.log("API response status:", response.status);
                
                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    console.error("API error response:", errorData);
                    throw new Error(errorData.message || "Failed to load order");
                }
                
                const order = await response.json();
                console.log("Order data received:", order);
                displayOrder(order);
            } catch (error) {
                console.error("Error in loadOrderDetails:", error);
                throw error; // Re-throw to be caught by the caller
            }
        }

        function displayOrder(order) {
            if (!order) {
                showError("No order data received");
                return;
            }

            // Update the DOM elements with order data
            document.getElementById("claim-code").textContent = order.claimCode || "N/A";
            
            const orderDate = order.orderDate ? new Date(order.orderDate) : new Date();
            document.getElementById("order-date").textContent = orderDate.toLocaleString();
            
            document.getElementById("order-total").textContent = 
                order.totalAmount ? `$${order.totalAmount.toFixed(2)}` : "$0.00";
        }

        function showError(message) {
            const errorElement = document.getElementById("error-message");
            errorElement.textContent = message;
            errorElement.classList.remove("hidden");
            
            // Set placeholder values
            document.getElementById("claim-code").textContent = "Error";
            document.getElementById("order-date").textContent = "N/A";
            document.getElementById("order-total").textContent = "$0.00";
        }
    </script>
</body>
</html>
